<!DOCTYPE html>
<html lang="en">

<% include layouts/head.html %>

<body>

    <div id="wrapper">

        <% include layouts/nav.html %>

        <div id="page-wrapper">
            <div class="row">
                <div class="col-lg-12">
                    <h1 class="page-header">SlowShutter #<%=id%></h1>
                </div>
                <!-- /.col-lg-12 -->
            </div>
            <!-- /.row -->
            <div class="row">
                <div class="col-lg-5">
                    <h3>Detail Information</h3>
                    <div class="row">
                        <div class="col-md-6">
                            <form role="form">
                                <div class="form-group">
                                    <label>Type</label>
                                    <p class="form-control-static">SQLite</p>
                                </div>
                                <div class="form-group" style="overflow-x:scroll;">
                                    <label>URL</label>
                                    <p class="form-control-static">http://api.carriage.com/slowshutter/7544/<%=id%></p>
                                </div>
                                <div class="form-group">
                                    <label>Next Sync</label>
                                    <p class="form-control-static">2015-08-<%=parseInt(Math.random()*4) + 22%></p>
                                </div>
                                <div class="form-group">
                                    <label>Key</label>
                                    <p class="form-control-static"><%=tools.md5(String(Math.random())).substr(0, 10)%></p>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-6">
                            <form role="form">
                                <div class="form-group">
                                    <label>Node DB</label>
                                    <p class="form-control-static">100</p>
                                </div>
                                <div class="form-group">
                                    <label>Distributed DB Center</label>
                                    <p class="form-control-static">15</p>
                                </div>
                                <div class="form-group">
                                    <label>Root DB</label>
                                    <p class="form-control-static">1</p>
                                </div>
                                <div class="form-group">
                                    <label>Operation</label>
                                    <p>
                                        <button type="button" class="btn btn-primary">Export</button>
                                        <button type="button" class="btn btn-info">Reset</button>
                                    </p>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-lg-7">
                    <div id="slowshutter-demo-chart1" style="height:500px;">
                    </div>
                </div>
            </div>
            <!-- /.row -->
            <div class="row">
                <div class="col-lg-12">
                    <div class="jumbotron">
                        <p>SlowShutter service provides reliable and slow-synchronization database, which performs distributions and storage states in the back-stage management.</p>
                    </div>
                </div>
                <!-- /.col-lg-12 -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /#page-wrapper -->

    </div>
    <!-- /#wrapper -->

</body>

<% include layouts/foot.html %>
<script>

var myChart = echarts.init(document.getElementById('slowshutter-demo-chart1'));

var nodes = [];
var links = [];
var constMaxDepth = 2;
var constMaxChildren = 7;
var constMinChildren = 4;
var constMaxRadius = 10;
var constMinRadius = 2;

function rangeRandom(min, max) {
    return Math.random() * (max - min) + min;
}

function createRandomNode(depth) {
    var node = {
        name : 'NODE_' + nodes.length,
        value : rangeRandom(constMinRadius, constMaxRadius),
        // Custom properties
        id : nodes.length,
        depth : depth,
        category : depth === constMaxDepth ? 0 : 1
    }
    nodes.push(node);

    return node;
}

function forceMockThreeData() {
    var depth = 0;
    var rootNode = {
        name : 'ROOT',
        value : rangeRandom(constMinRadius, constMaxRadius),
        // Custom properties
        id : 0,
        depth : 0,
        category : 2
    }
    nodes.push(rootNode);

    function mock(parentNode, depth) {
        var nChildren = Math.round(rangeRandom(constMinChildren, constMaxChildren));

        for (var i = 0; i < nChildren; i++) {
            var childNode = createRandomNode(depth);
            links.push({
                source : parentNode.id,
                target : childNode.id,
                weight : 1
            });
            if (depth < constMaxDepth) {
                mock(childNode, depth + 1);
            }
        }
    }

    mock(rootNode, 0);
}

forceMockThreeData();

var option = {
    title : {
        text: 'Distributed DB Network',
        subtext: 'Node Tree',
        x:'right',
        y:'bottom'
    },
    tooltip : {
        trigger: 'item',
        formatter: '{a} : {b}'
    },
    toolbox: {
        show : false
    },
    legend: {
        x: 'left',
        data:['Node DB', 'Distributed DB Center', 'Root DB']
    },
    series : [
        {
            type:'force',
            name : "Force tree",
            ribbonType: false,
            categories : [
                {
                    name: 'Node DB'
                },
                {
                    name: 'Distributed DB Center'
                },
                {
                    name: 'Root DB'
                }
            ],
            itemStyle: {
                normal: {
                    label: {
                        show: false
                    },
                    nodeStyle : {
                        brushType : 'both',
                        borderColor : 'rgba(255,215,0,0.6)',
                        borderWidth : 1
                    }
                }
            },
            minRadius : constMinRadius,
            maxRadius : constMaxRadius,
            coolDown: 0.995,
            steps: 10,
            nodes : nodes,
            links : links,
            steps: 1
        }
    ]
};
myChart.setOption(option);

</script>

  </body>

</html>
